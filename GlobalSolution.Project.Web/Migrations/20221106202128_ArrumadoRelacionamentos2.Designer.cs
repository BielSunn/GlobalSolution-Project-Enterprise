// <auto-generated />
using System;
using GlobalSolution.Project.Web.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GlobalSolution.Project.Web.Migrations
{
    [DbContext(typeof(GlobalSolutionContext))]
    [Migration("20221106202128_ArrumadoRelacionamentos2")]
    partial class ArrumadoRelacionamentos2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.Acessibilidade", b =>
                {
                    b.Property<int>("AcessibilidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_acessibilidade");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcessibilidadeId"), 1L, 1);

                    b.Property<string>("TipoAcessibilidade")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)")
                        .HasColumnName("tp_acessibilidade");

                    b.HasKey("AcessibilidadeId");

                    b.ToTable("T_ACESSIBILIDADE");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.AcessibilidadeLocal", b =>
                {
                    b.Property<int>("AcessibilidadeId")
                        .HasColumnType("int");

                    b.Property<int>("LocalId")
                        .HasColumnType("int");

                    b.HasKey("AcessibilidadeId", "LocalId");

                    b.HasIndex("LocalId");

                    b.ToTable("AcessibilidadeLocais");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.Bairro", b =>
                {
                    b.Property<int>("BairroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_bairro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BairroId"), 1L, 1);

                    b.Property<int>("CidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)")
                        .HasColumnName("nm_bairro");

                    b.HasKey("BairroId");

                    b.HasIndex("CidadeId");

                    b.ToTable("T_BAIRRO");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.Cidade", b =>
                {
                    b.Property<int>("CidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cidade");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CidadeId"), 1L, 1);

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("nm_cidade");

                    b.HasKey("CidadeId");

                    b.HasIndex("EstadoId");

                    b.ToTable("T_CIDADE");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_logradouro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnderecoId"), 1L, 1);

                    b.Property<string>("Cep")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("nr_cep");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)")
                        .HasColumnName("ds_logradouro");

                    b.HasKey("EnderecoId");

                    b.ToTable("T_ENDERECO");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.Estado", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_estado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoId"), 1L, 1);

                    b.Property<string>("Nome")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("nm_estado");

                    b.Property<string>("Sigla")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("sg_estado");

                    b.HasKey("EstadoId");

                    b.ToTable("T_ESTADO");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.Local", b =>
                {
                    b.Property<int>("LocalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_local");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocalId"), 1L, 1);

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)")
                        .HasColumnName("nm_local");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("tp_local");

                    b.HasKey("LocalId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("T_LOCAL");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.Telefone", b =>
                {
                    b.Property<int>("TelefoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_telefone");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TelefoneId"), 1L, 1);

                    b.Property<int>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("nr_telefone");

                    b.Property<int>("NumeroDDD")
                        .HasColumnType("int")
                        .HasColumnName("nr_ddd");

                    b.HasKey("TelefoneId");

                    b.ToTable("T_TELEFONE");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"), 1L, 1);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("dt_nascimento");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ds_email");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nm_usuario");

                    b.Property<string>("Senha")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ds_senha");

                    b.Property<int>("TelefoneId")
                        .HasColumnType("int");

                    b.HasKey("UsuarioId");

                    b.HasIndex("TelefoneId");

                    b.ToTable("T_USUARIO");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.AcessibilidadeLocal", b =>
                {
                    b.HasOne("GlobalSolution.Project.Web.Models.Acessibilidade", "Acessibilidade")
                        .WithMany("AcessibilidadeLocal")
                        .HasForeignKey("AcessibilidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlobalSolution.Project.Web.Models.Local", "Local")
                        .WithMany("AcessibilidadeLocal")
                        .HasForeignKey("LocalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acessibilidade");

                    b.Navigation("Local");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.Bairro", b =>
                {
                    b.HasOne("GlobalSolution.Project.Web.Models.Cidade", "Cidade")
                        .WithMany("Bairros")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.Cidade", b =>
                {
                    b.HasOne("GlobalSolution.Project.Web.Models.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.Local", b =>
                {
                    b.HasOne("GlobalSolution.Project.Web.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.Usuario", b =>
                {
                    b.HasOne("GlobalSolution.Project.Web.Models.Telefone", "Telefone")
                        .WithMany()
                        .HasForeignKey("TelefoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Telefone");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.Acessibilidade", b =>
                {
                    b.Navigation("AcessibilidadeLocal");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.Cidade", b =>
                {
                    b.Navigation("Bairros");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.Estado", b =>
                {
                    b.Navigation("Cidades");
                });

            modelBuilder.Entity("GlobalSolution.Project.Web.Models.Local", b =>
                {
                    b.Navigation("AcessibilidadeLocal");
                });
#pragma warning restore 612, 618
        }
    }
}
